@Override
    @Transactional
    public void iSave(Salary salary) {

        if (salary.getMonthlySalary() >= 141.70 && salary.getPeriod().getNumberDays() >= 1 && salary.getPeriod().getNumberDays() <= 31) {

            TableIsr2021 tableIsr2021 = iTableIsr2021Dao.findByLowerLimit(salary.getMonthlySalary());

            TableSubsidy2021 tableSubsidy2021 = iTableSubsidy2021Dao.findByIncomeFrom(salary.getMonthlySalary());

            double monthFactor = 30.40;

            double lowerLimitBase = salary.getMonthlySalary() - tableIsr2021.getLowerLimit();
            salary.getCalculation().setLowerLimit(lowerLimitBase);

            salary.getCalculation().setExcessPercentage(tableIsr2021.getExcessPercentage());

            double marginalTax = salary.getCalculation().getExcessPercentage() * lowerLimitBase / 100;
            salary.getCalculation().setMarginalTax(marginalTax);

            salary.getCalculation().setFixedFee(tableIsr2021.getFixedFee());

            double isrInCharge = marginalTax + salary.getCalculation().getFixedFee();
            salary.getCalculation().setIsrInCharge(isrInCharge);

            double discountIsr = (salary.getCalculation().getIsrInCharge() / monthFactor) * salary.getPeriod().getNumberDays();
            salary.getCalculation().setDiscountIsr(discountIsr);

            double subsidy = ((tableSubsidy2021.getMonthlyAllowance() / monthFactor) * salary.getPeriod().getNumberDays());
            System.out.println("Subsidy: " + subsidy);
            iSalaryDao.save(salary);

        } else {
            System.out.println("Number of days has to be in a range between 1 y 31 ");
        }
    }